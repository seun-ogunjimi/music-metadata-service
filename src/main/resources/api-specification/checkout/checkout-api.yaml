openapi: 3.0.3
info:
  title: Checkout Api
  description: This service provides api for checkout and basket related operations
  version: 1.0.0
servers:
  - url: 'http://wayfair.com/'
tags:
  - name: checkout-service
    description: Operations using customer baskets and checkout Api

paths:
  /basket/customers/{customer_uuid}:
    post:
      tags:
        - basket
      summary: Get paginated basket product sorted by created date in desc
      operationId: getPageBasket
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: page
          description: Current Page Index
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: pageSize
          description: Max count of items on a page
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: Customer Product Basket
          content:
            application/json:
              schema:
                $ref: 'checkout-dto.yaml#/components/schemas/PageBasketDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
    get:
      tags:
        - basket
      summary: Get basket of all customer products sorted by created date in asc
      operationId: getBasket
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Customer Product Basket
          content:
            application/json:
              schema:
                $ref: 'checkout-dto.yaml#/components/schemas/BasketDTO'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object

  /basket/customers/{customer_uuid}/products/{product_uuid}/{quantity}:
    put:
      tags:
        - basket
      summary: Add a product to a customer basket
      operationId: addProductToBasket
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: product_uuid
          description: Product UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: quantity
          description: Number of Product Items
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Product Added to Basket
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

    patch:
      tags:
        - basket
      summary: Modify product quantity
      operationId: changeProductQuantity
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: product_uuid
          description: Product UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: quantity
          description: Number of Product Items
          required: true
          schema:
            type: integer
            format: int32
      responses:
        204:
          description: Product quatity was modified successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

  /basket/customers/{customer_uuid}/products/{product_uuid}:
    delete:
      tags:
        - basket
      summary: Remove a product from basket
      operationId: removeProductFromBasket
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
        - in: path
          name: product_uuid
          description: Product UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Product removed successfully
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error

  /basket/customers/{customer_uuid}/checkout:
    post:
      tags:
        - basket
      summary: checkout customer basket for payment
      operationId: checkout
      parameters:
        - in: path
          name: customer_uuid
          description: Customer UUID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: customer checkout successful
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal server error